# Generated by Django 5.1.2 on 2024-11-02 05:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('state', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('address', models.TextField()),
                ('gst_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chassiss_no', models.CharField(max_length=50, unique=True)),
                ('engine_no', models.CharField(max_length=50, unique=True)),
                ('registration_no', models.CharField(max_length=20, unique=True)),
                ('region', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('variant', models.CharField(max_length=50)),
                ('transmission_type', models.CharField(choices=[('Manual', 'Manual'), ('Automatic', 'Automatic')], max_length=20)),
                ('fuel_type', models.CharField(choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Electric', 'Electric'), ('Hybrid', 'Hybrid')], max_length=20)),
                ('seating_capacity', models.IntegerField()),
                ('color', models.CharField(max_length=30)),
                ('asset_number_sequence', models.CharField(max_length=100)),
                ('date_of_manufacture', models.DateField()),
                ('insurance_valid_upto', models.DateField()),
                ('puc_valid_upto', models.DateField()),
                ('fitness_valid_upto', models.DateField()),
                ('last_battery_change_date', models.DateField(blank=True, null=True)),
                ('last_service_date', models.DateField(blank=True, null=True)),
                ('last_service_kms', models.IntegerField(blank=True, null=True)),
                ('next_service_due_kms', models.IntegerField(blank=True, null=True)),
                ('next_service_due_date', models.DateField(blank=True, null=True)),
                ('gps_tracking_enabled', models.BooleanField(default=False)),
                ('owner_name', models.CharField(max_length=100)),
                ('owner_contact', models.CharField(max_length=15)),
                ('purchase_date', models.DateField()),
                ('warranty_expiry_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_date', models.DateField()),
                ('end_time', models.TimeField()),
                ('type_of_trip', models.CharField(choices=[('Local', 'Local'), ('Outstation Per KM', 'Outstation Per KM'), ('Outstation Lump Sum', 'Outstation Lump Sum')], max_length=50)),
                ('start_location', models.CharField(max_length=100)),
                ('end_location', models.CharField(max_length=100)),
                ('destinations', models.TextField()),
                ('number_of_days', models.IntegerField()),
                ('driver_name', models.CharField(max_length=100)),
                ('driver_number', models.CharField(max_length=15)),
                ('driver_license_number', models.CharField(max_length=50)),
                ('driver_address', models.CharField(max_length=200)),
                ('fuel_cost_per_litre', models.DecimalField(decimal_places=2, max_digits=6)),
                ('average_km_per_litre', models.DecimalField(decimal_places=2, max_digits=6)),
                ('start_km', models.IntegerField()),
                ('end_km', models.IntegerField()),
                ('total_fuel_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('maintenance_per_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_maintenance_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('driver_wage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('state_tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('other_charges', models.DecimalField(decimal_places=2, max_digits=10)),
                ('carrier_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fastag_start_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fastag_end_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_toll', models.DecimalField(decimal_places=2, max_digits=10)),
                ('per_km_charges', models.DecimalField(decimal_places=2, max_digits=6)),
                ('per_day_avg_km', models.DecimalField(decimal_places=2, max_digits=6)),
                ('minimum_kms_billing_per_day', models.DecimalField(decimal_places=2, max_digits=6)),
                ('trip_status', models.CharField(choices=[('Planned', 'Planned'), ('Ongoing', 'Ongoing'), ('Completed', 'Completed')], max_length=50)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('Paid Service', 'Paid Service'), ('General Repair', 'General Repair'), ('Damage Repair', 'Damage Repair'), ('Insurance Renewal', 'Insurance Renewal'), ('PUC Renewal', 'PUC Renewal'), ('Fitness Renewal', 'Fitness Renewal'), ('Fuel', 'Fuel'), ('Tyre', 'Tyre'), ('Battery', 'Battery'), ('Washing', 'Washing'), ('Detailing', 'Detailing'), ('Toll', 'Toll'), ('Parking', 'Parking'), ('Others', 'Others')], max_length=50)),
                ('expense_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('service_center_name', models.CharField(blank=True, max_length=100, null=True)),
                ('service_center_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('Insurance', 'Insurance'), ('RC', 'RC'), ('PUC', 'PUC'), ('Fitness Certificate', 'Fitness Certificate'), ('Warranty', 'Warranty'), ('Permit', 'Permit')], max_length=50)),
                ('document_file', models.FileField(upload_to='documents/')),
                ('upload_date', models.DateField(auto_now_add=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.vehicle')),
            ],
        ),
    ]
